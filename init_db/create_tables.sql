DROP DATABASE ecommerce;

CREATE DATABASE ecommerce;

USE ecommerce;

CREATE TABLE Users (
    ID INT NOT NULL AUTO_INCREMENT,
    Name VARCHAR(100) NOT NULL,
    Email VARCHAR(320) NOT NULL,
    Phone_No VARCHAR(20) NOT NULL,
    PRIMARY KEY(ID)
);

CREATE TABLE Addresses (
    ID INT NOT NULL AUTO_INCREMENT,
    Address1 VARCHAR(255) NOT NULL,
    Address2 VARCHAR(255),
    Address3 VARCHAR(255),
    PRIMARY KEY(ID),
    CONSTRAINT USRADDR FOREIGN KEY (ID) REFERENCES Users(ID)
);

CREATE TABLE Admin (
    Admin_id INT NOT NULL AUTO_INCREMENT,
    Username VARCHAR(100) NOT NULL,
    Password VARCHAR(255) NOT NULL,
    Division VARCHAR(100) NOT NULL,
    PRIMARY KEY(Admin_id),
    CONSTRAINT FKUSRADM FOREIGN KEY (Admin_ID) REFERENCES Users(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Sellers (
    Seller_ID INT NOT NULL AUTO_INCREMENT,
    Username VARCHAR(100) NOT NULL,
    Password VARCHAR(255) NOT NULL,
    Address VARCHAR(255) NOT NULL,
    PRIMARY KEY(Seller_id),
    CONSTRAINT FKUSRSEL FOREIGN KEY (Seller_ID) REFERENCES Users(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Bank (
    Bank_id INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(100) NOT NULL,
    Email VARCHAR(255) NOT NULL,
    Phone_no CHAR(10) NOT NULL,
    Address VARCHAR(255) NOT NULL
);

CREATE TABLE Customer(
    Cust_id INT NOT NULL AUTO_INCREMENT,
    Username VARCHAR(100) NOT NULL,
    Password VARCHAR(255) NOT NULL,
    Bank_ID INT NOT NULL,
    Bank_AccNum INT NOT NULL,
    PRIMARY KEY(Cust_id),
    UNIQUE(Bank_ID, Bank_AccNum),
    CONSTRAINT FKCUSTID FOREIGN KEY (Cust_id) REFERENCES Users(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FKBANKID FOREIGN KEY (Bank_ID) REFERENCES Bank(Bank_ID) ON DELETE Restrict ON UPDATE Restrict
);

CREATE TABLE Transactions (
    T_ID INT NOT NULL AUTO_INCREMENT,
    Bank_ID INT NOT NULL,
    Account_id INT NOT NULL,
    Approval_Status ENUM('Approved', 'Pending', 'Rejected') NOT NULL,
    Timestamp TIMESTAMP NOT NULL,
    Amount INT NOT NULL,
    PRIMARY KEY(T_ID),
    CONSTRAINT FKTRCU FOREIGN KEY (Bank_ID, Account_id) REFERENCES Customer(Bank_ID, Bank_AccNum) ON UPDATE RESTRICT ON DELETE RESTRICT,
    CONSTRAINT FKTRBA FOREIGN KEY (Bank_ID) REFERENCES Bank(Bank_ID) ON UPDATE RESTRICT ON DELETE RESTRICT
);

CREATE TABLE Product (
    Product_ID INT NOT NULL AUTO_INCREMENT,
    Name VARCHAR(100) NOT NULL,
    Category VARCHAR(100) NOT NULL,
    Description VARCHAR(1000),
    PRIMARY KEY(Product_ID)
);

CREATE TABLE Product_Stock (
    Product_ID INT NOT NULL,
    Seller_ID INT NOT NULL,
    Price INT NOT NULL,
    Stock INT NOT NULL,
    PRIMARY KEY(Product_ID),
    CONSTRAINT FKPSPR FOREIGN KEY (Product_ID) REFERENCES Product(Product_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FKPSSE FOREIGN KEY (Seller_ID) REFERENCES Sellers(Seller_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Orders (
    Order_ID INT NOT NULL AUTO_INCREMENT,
    Cust_ID INT NOT NULL,
    Timestamp TIMESTAMP NOT NULL,
    Status ENUM(
        'Processing',
        'Confirmed',
        'In Progress',
        'Completed',
        'Cancelled'
    ) NOT NULL,
    Verified_By INT NOT NULL,
    T_ID INT NOT NULL,
    PRIMARY KEY(Order_ID),
    CONSTRAINT FKORCU FOREIGN KEY (Cust_ID) REFERENCES Customer(Cust_ID) ON UPDATE CASCADE ON DELETE RESTRICT,
    CONSTRAINT FKORAD FOREIGN KEY (Verified_By) REFERENCES Admin(Admin_ID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE Order_Summary (
    Order_ID INT NOT NULL,
    Product_ID INT NOT NULL,
    Seller_ID INT NOT NULL,
    Count INT NOT NULL,
    PRIMARY KEY(Order_ID),
    CONSTRAINT FKOSOR FOREIGN KEY (Order_id) REFERENCES Orders(Order_ID) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FKOSPS_PID FOREIGN KEY (Product_ID) REFERENCES Product_Stock(Product_ID) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FKOSPS_SID FOREIGN KEY (Seller_ID) REFERENCES Product_Stock(Seller_ID) ON UPDATE CASCADE ON DELETE CASCADE
);
